print("Checked")

local events = require(game.ReplicatedStorage.ClientModules.Module_Events)
local cameraShaker = require(game.ReplicatedStorage.CameraShaker)
local camera = workspace.CurrentCamera

local camShake = cameraShaker.new(Enum.RenderPriority.Camera.Value, function(cf)
	camera.CFrame = camera.CFrame * cf
end)
camShake:Start()
local killed = false
local function Move()
	local val = 80
	local Reboundspeed = 3
	local ReboundDelay = 3
	local storer = Reboundspeed
	local entityheight = Vector3.new(0,0.6,0)

	local s= game:GetObjects("rbxassetid://12029110296")[1]
	s.Parent = workspace
	local entity = s.Silence
	entity.CanCollide = false

	local function canSeeTarget(target,size)
		if killed == true then
			return
		end
		local origin = entity.Position
		local direction = (target.HumanoidRootPart.Position - entity.Position).unit * size
		local ray = Ray.new(origin, direction)

		local hit, pos = workspace:FindPartOnRay(ray, entity)


		if hit then
			if hit:IsDescendantOf(target) then
				killed = true
				return true
			end
		else
			return false
		end
	end
	-------------------------
	spawn(function()
		while entity ~= nil do wait(0.5)
			local v = game.Players.LocalPlayer
			local parent = script.Parent
			if v.Character ~= nil and not v.Character:GetAttribute("Hiding") then
				if canSeeTarget(v.Character,200) then
					--ReboundMoving:Stop()
					game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):TakeDamage(100)
					firesignal(game.ReplicatedStorage.Bricks.DeathHint.OnClientEvent, {"You died to who you call Kernel..","His presence is known for flickering all the lights for a long time.","When he does this, Hide somewhere that he cant find you","Closets will be a bad spot for Hiding!"})
					for i,v in pairs(entity:GetDescendants()) do
						if v:IsA("Sound") then
							v:Stop()
						end
					end
					--loadstring(game:HttpGet('https://github.com/Noonie1/ReboundMain/raw/main/JumpscareLua.lua'))()
				end
			end
			if v.Character ~= nil then
				if v.Character:FindFirstChild("HumanoidRootPart") and (entity.Position - v.Character:FindFirstChild("HumanoidRootPart").Position).magnitude <= val	 then
					camShake:ShakeOnce(20,28,0.1,2,1,6)
				end
			end
		end
	end)
	---------------------MOVEMENTS
	local gruh = workspace.CurrentRooms
	--for i = 1,6 do


		entity.Anchored = true

		for i = 0, game.ReplicatedStorage.GameData.LatestRoom.Value + 1 do
			if gruh:FindFirstChild(i) then
				print("room "..i)
				local room = gruh[i]
				if room:FindFirstChild("Nodes") then
					local RoomStart = room:FindFirstChild("RoomStart")
					local RoomEnd = room:FindFirstChild("RoomEnd")
					if RoomEnd then
						Reboundspeed = storer
						local events = require(game.ReplicatedStorage.ClientModules.Module_Events)
						events.breakLights(RoomStart.Parent, 1)
						game.TweenService:Create(entity,TweenInfo.new(Reboundspeed,Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{CFrame = RoomStart.CFrame + entityheight}):Play()
						wait(ReboundDelay)
					end
				end
			end
			print("looping")
		end
	entity.Anchored = false
end

--end

local GetAll = workspace.CurrentRooms:GetChildren()

function SilenceMove()
	wait(.2)
	local Time = math.clamp(4,0,2)
	for i,v in pairs(workspace.CurrentRooms:GetChildren()) do
		events.flickerLights(v, Time)
	end
	wait(Time)
	Move()
end

SilenceMove()
