local events = require(game.ReplicatedStorage.ClientModules.Module_Events)
local cameraShaker = require(game.ReplicatedStorage.CameraShaker)
local camera = workspace.CurrentCamera

local camShake = cameraShaker.new(Enum.RenderPriority.Camera.Value, function(cf)
	camera.CFrame = camera.CFrame * cf
end)
camShake:Start()
local killed = false
local function Move()
	local val = 80
	local Reboundspeed = .4
	local ReboundDelay = .4
	local storer = Reboundspeed
	local entityheight = Vector3.new(0,1.1,0)

	local s= game:GetObjects("rbxassetid://12209319881")[1]
	s.Parent = workspace
	local entity = s.RushNew
	entity.CanCollide = false

	local function canSeeTarget(target,size)
		if killed == true then
			return
		end
		local origin = entity.Position
		local direction = (target.HumanoidRootPart.Position - entity.Position).unit * size
		local ray = Ray.new(origin, direction)

		local hit, pos = workspace:FindPartOnRay(ray, entity)


		if hit then
			if hit:IsDescendantOf(target) then
				killed = true
				return true
			end
		else
			return false
		end
	end
	-------------------------
	spawn(function()
		while entity ~= nil do wait(0.05)
			local v = game.Players.LocalPlayer
			local parent = script.Parent
			if v.Character ~= nil and not v.Character:GetAttribute("Hiding") then
				if canSeeTarget(v.Character,100) then
					--ReboundMoving:Stop()
					game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):TakeDamage(100)
					--loadstring(game:HttpGet('https://github.com/Noonie1/ReboundMain/raw/main/JumpscareLua.lua'))()
				end
			end
			if v.Character ~= nil then
				if v.Character:FindFirstChild("HumanoidRootPart") and (entity.Position - v.Character:FindFirstChild("HumanoidRootPart").Position).magnitude <= val	 then
					camShake:ShakeOnce(25,34,0.1,.5,1,3)
				end
			end
		end
	end)
	---------------------MOVEMENTS
	local gruh = workspace.CurrentRooms
	entity.Anchored = true
	for i = 1,15 do
		for i = 0, game.ReplicatedStorage.GameData.LatestRoom.Value + 1 do
			if gruh:FindFirstChild(i) then
				print("room "..i)
				local room = gruh[i]
				if room:FindFirstChild("Nodes") then
					local RoomStart = room:FindFirstChild("RoomStart")
					local RoomEnd = room:FindFirstChild("RoomEnd")
					if RoomEnd then
						Reboundspeed = storer
						local events = require(game.ReplicatedStorage.ClientModules.Module_Events)
						events.breakLights(RoomStart.Parent, .1)
						game.TweenService:Create(entity,TweenInfo.new(Reboundspeed,Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{CFrame = RoomStart.CFrame + entityheight}):Play()
						wait(ReboundDelay)
					end
				end
			end
			print("looping")
		end

		for i = game.ReplicatedStorage.GameData.LatestRoom.Value + 1,0,-1 do
			if gruh:FindFirstChild(i) then
				print("room "..i)
				local room = gruh[i]
				if room:FindFirstChild("Nodes") then
					local RoomStart = room:FindFirstChild("RoomStart")
					local RoomEnd = room:FindFirstChild("RoomEnd")
					if RoomEnd then
						Reboundspeed = storer
						local events = require(game.ReplicatedStorage.ClientModules.Module_Events)
						events.breakLights(RoomStart.Parent, .1)
						game.TweenService:Create(entity,TweenInfo.new(Reboundspeed,Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{CFrame = RoomStart.CFrame + entityheight}):Play()
						wait(ReboundDelay)
					end
				end
			end
			print("looping")
		end
	end
	entity.Anchored = false
	wait(4)
	entity.Parent:Destroy()
	camShake:ShakeOnce(9,14,0,10,3,5)
end

function KernelMove()
	if workspace.Ambience_Seek.Playing == false and workspace.Ambience_Figure.Playing == false then
		Move()
	end
end

spawn(function()
while true do
	wait(285)
	KernelMove()
end
end)
